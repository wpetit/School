<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<bean name="propertyPlaceholder"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:db.properties" />
	</bean>
	
	<bean id="workDao" class="fr.min.school.dao.impl.WorkDAOImpl">
	   <property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<bean id="studentWorkDao" class="fr.min.school.dao.impl.StudentWorkDAOImpl">
       <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

	<bean id="schoolDao" class="fr.min.school.dao.impl.SchoolDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="studentClassDao" class="fr.min.school.dao.impl.StudentClassDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="schoolDAO" ref="schoolDao" />
		<property name="studentDAO" ref="studentDao" />
	</bean>

	<bean id="studentDao" class="fr.min.school.dao.impl.StudentDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Hibernate settings -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>fr.min.school.model.School</value>
				<value>fr.min.school.model.SchoolYear</value>
				<value>fr.min.school.model.Student</value>
				<value>fr.min.school.model.StudentClass</value>
				<value>fr.min.school.model.Work</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password" />
	</bean>

	<!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> 
		bean below) -->
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- AOP configuration -->

	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* fr.min.school.dao..*DAO*.*(..))" />
		<aop:advisor pointcut-ref="serviceOperation" advice-ref="txAdvice" />
	</aop:config>
	
	<aop:config>
	   <aop:pointcut id="logPointcut" expression="execution(* fr.min.school..*(..))" />
        <aop:aspect id="loggingAspect" ref="schoolLogger">
            <aop:before method="logMethodEntry" pointcut-ref="logPointcut" />
            <aop:after-returning method="logMethodExit"
                returning="result" pointcut-ref="logPointcut" />
            <aop:after-throwing method="logMethodThrow"
                pointcut-ref="logPointcut" throwing="thrown"/>
        </aop:aspect>
	</aop:config>

	<!-- Log configuration -->
	<bean id="schoolLogger" class="fr.min.school.log.SchoolLogger" />
</beans>
